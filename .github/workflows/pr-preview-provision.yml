name: preview-provision
on:
  pull_request:
    types: [opened, edited, reopened, synchronize, ready_for_review]
jobs:
  harbor-provision:
    if: |
      github.event.pull_request.draft == false &&
      (
          (
              contains(github.event.pull_request.title, '[harbor]') &&
              contains(fromJson('["opened", "reopened", "synchronize", "ready_for_review"]'), github.event.action)
          ) ||
          (
              github.event.action == 'edited' &&
              contains(github.event.pull_request.title, '[harbor]') &&
              github.event.changes.title.from &&
              !contains(github.event.changes.title.from, '[harbor]')
          )
      )
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.2
    steps:
      # We first need to generate a token
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: Start Provisioning
        env:
          FORGE_TOKEN: ${{ secrets.FORGE_TOKEN }} # Your Forge token
          FORGE_SERVER: ${{ secrets.FORGE_SERVER }} # The Forge server id you want to make a new site on
          FORGE_GIT_REPOSITORY: ${{ github.repository }} # mehrancodes/harbor-laravel-sample
          FORGE_GIT_BRANCH: ${{ github.head_ref }} # plt-123-add-new-feature
          FORGE_DOMAIN: laravel-harbor.com
          FORGE_ENV_KEYS: ${{ vars.LARAVEL_ENV_KEYS }}
          SUBDOMAIN_NAME: pr-${{ github.event.number }}
          FORGE_PHP_VERSION: php83
          FORGE_DEPLOY_SCRIPT: ${{ vars.FORGE_DEPLOY_SCRIPT }}
          TOKEN_GITHUB: ${{ steps.generate-token.outputs.token }}

          # Indicates we want to deploy using deploy keys
          FORGE_GITHUB_DEPLOY_KEY: true
          # The git URL to be used in Forge
          FORGE_GIT_REPOSITORY_URL: "git@github.com:${{ github.repository }}.git"
          # We have to set the provider to 'custom', since Forge otherwise wouldn't use the deploy-key
          FORGE_GIT_PROVIDER: custom
          # We set the token we got from our app, instead of the default token
          # As the default actions token does not have permissions to create a deploy key
          GIT_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          echo ${{ env.TOKEN_GITHUB }}
